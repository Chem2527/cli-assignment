name: Container Vulnerability Scan

on:
  push:
    branches:
      - main  # Trigger action when changes are pushed to the main branch

jobs:
  scan:
    runs-on: ubuntu-latest  # The job runs on the latest Ubuntu runner

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker for building the image
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t vulnerable-python-app -f vulnerable-python-app/Dockerfile vulnerable-python-app/

      # Scan the Docker image for vulnerabilities using Trivy
      - name: Scan for vulnerabilities using Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vulnerable-python-app'  # The Docker image to be scanned
          format: 'json'  # Output format as JSON
          output: 'trivy-report.json'  # Store the Trivy scan report in this file
          exit-code: '0'  # Do not fail the build if vulnerabilities are found
          severity: 'CRITICAL,HIGH'  # Scan for critical and high severity vulnerabilities

      # Send the Trivy report to Slack channel named "vulneribilities"
      - name: Send Trivy report to Slack
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel: 'vulneribilities'  # Specify the Slack channel name
          text: 'Trivy vulnerability scan completed.'
          attachments: |
            [
              {
                "pretext": "Vulnerability Scan Report",
                "title": "Trivy Scan Report",
                "text": "The Trivy scan report is attached.",
                "color": "warning",
                "fields": [
                  {
                    "title": "Scan Summary",
                    "value": "The Trivy scan has found critical and high vulnerabilities.",
                    "short": false
                  }
                ],
                "footer": "Scan completed by GitHub Actions"
              }
            ]
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}  # Slack webhook URL from GitHub Secrets
      
      # Push the Trivy report to the Azure VM for Prometheus storage
      - name: Push Trivy report to Azure VM for Prometheus
        run: |
          # Create the target directory on the Azure VM (if it doesn't exist)
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} azureuser@${{ secrets.AZURE_VM_IP }} "mkdir -p /home/azureuser/trivy-reports/"

          # Copy the Trivy report to the Azure VM
          scp -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} trivy-report.json azureuser@${{ secrets.AZURE_VM_IP }}:/home/azureuser/trivy-reports/
