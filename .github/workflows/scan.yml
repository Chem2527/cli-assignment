name: Container Vulnerability Scan & Report

on:
  push:
    branches:
      - main

jobs:
  scan-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t vulnerable-python-app \
          -f vulnerable-python-app/Dockerfile \
          vulnerable-python-app/

      # Step 4: Run Trivy vulnerability scan
      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'vulnerable-python-app'
          format: 'json'
          output: 'trivy-report.json'
          severity: 'CRITICAL,HIGH'

      # Step 5: Configure SSH for EC2
      - name: Configure SSH for EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh-keyscan -H ${{ secrets.AZURE_VM_IP }} >> ~/.ssh/known_hosts

      # Step 6: Push report to EC2 instance
      - name: Push report to EC2 instance
        run: |
          scp -i private_key.pem \
          trivy-report.json azureuser@${{ secrets.AZURE_VM_IP }}:/home/azureuser/vulnerabilities/

      # Step 7: Send Email Notification to Slack Channel via Email Address
      - name: Send Email Notification to Slack Channel
        if: always()  # Send notification regardless of success or failure
        run: |
          STATUS="${{ job.status }}"
          SUBJECT="Build Status Update"
          BODY="Build Status: $STATUS\nThe report has been pushed to EC2 at \`/home/azureuser/vulnerabilities/trivy-report.json\`."

          curl -X POST -H "Content-Type: application/json" \
            --data "{
              \"text\": \"${BODY}\"
            }" \
            https://hooks.slack.com/services/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  # Replace with your actual Slack webhook URL

