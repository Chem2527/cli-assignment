name: Container Vulnerability Scan using trivy

on:
  push:
    branches:
      - main  # Trigger action when changes are pushed to the main branch

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Checkout the repository code

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2  # Set up Docker Buildx (for multi-platform support)

      - name: Build the Docker image
        run: |
         docker build -t vulnerable-python-app -f vulnerable-python-app/Dockerfile vulnerable-python-app/  # Build the Docker image from the Dockerfile inside the vulnerable-python-app folder

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.41.0/trivy_0.41.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.41.0_Linux-64bit.deb

      - name: Scan for vulnerabilities using Trivy
        id: trivy_scan
        run: |
          trivy image --format json --output trivy-report.json --severity CRITICAL,HIGH vulnerable-python-app
      
      - name: Upload Trivy Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Set job status variable
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "JOB_STATUS=Passed" >> $GITHUB_ENV
          else
            echo "JOB_STATUS=Failed" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Send Slack Notification with Results
        if: always()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: "#vulnerability-reports"
        run: |
          # Construct the Slack message with proper line breaks and formatting
          SLACK_MESSAGE=$(cat <<EOF
          {
            "text": "Container Vulnerability Scan Results",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Build Status:* ${JOB_STATUS}"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Vulnerability report is attached."
                }
              }
            ]
          }
          EOF
          )

          # Construct the file upload request using curl (Note the @ before the file path)
          curl -X POST -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
          -H 'Content-Type: multipart/form-data' \
          -F "channel=${SLACK_CHANNEL}" \
          -F "initial_comment=$SLACK_MESSAGE" \
          -F "file=@trivy-report.json" \
          https://slack.com/api/files.upload
